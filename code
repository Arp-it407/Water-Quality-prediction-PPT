

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix

# Step 1: Load the dataset
df = pd.read_csv('water_quality.csv')  # Replace with your dataset path

# Step 2: Explore the data
print(df.head())
print(df.info())

# Optional: Visualize correlations
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')

plt.show()

# Step 3: Preprocess data
# Assuming 'Potability' or 'Quality' is the target column
X = df.drop('Potability', axis=1)  # Independent features
y = df['Potability']               # Target: 0 = Not Safe, 1 = Safe

# Fill missing values (optional depending on dataset)
X = X.fillna(X.mean())

# Step 4: Split into training and testing
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Train a model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 6: Evaluate the model
y_pred = model.predict(X_test)

print("Classification Report:")
print(classification_report(y_test, y_pred))

print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))

# Step 7: Predict on new data
# new_sample = pd.DataFrame([[ph, Hardness, Solids, ...]], columns=X.columns)
# prediction = model.predict(new_sample)
# print("Water is", "Safe" if prediction[0] == 1 else "Not Safe")
